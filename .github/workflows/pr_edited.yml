# PR Edited Workflow: Saves the PR message when the PR body is edited
# This workflow performs the following tasks:
# 1. Checks if the PR body has been changed
# 2. If the body changed, saves the updated PR message for later use in release notes

name: Save Updated PR Message

on:
  pull_request:
    types: [edited]

jobs:
  build:
    # PR Î≥∏Î¨∏Ïù¥ Î≥ÄÍ≤ΩÎêòÏóàÏùÑ ÎïåÎßå ÏõåÌÅ¨ÌîåÎ°úÏö∞ Ïã§Ìñâ
    if: ${{ github.event.changes.body != null }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch complete history

      - name: Setup Node.js üêç
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Save Updated PR Message üè∑Ô∏è
        run: |
          # Save PR message for later use in tag and release
          echo "üìù Retrieving PR message to use in release notes"
          PR_MESSAGE=$(gh pr view ${{ github.event.pull_request.number }} --json body --jq .body)

          # Create directory if it doesn't exist
          mkdir -p .github/temp

          # Save PR message to file
          echo "$PR_MESSAGE" > .github/temp/PR_MESSAGE.md

          # Setup git user
          echo "üë§ Setting up git user for commit"
          git config --local user.name "nalbam-bot"
          git config --local user.email "bot@nalbam.com"

          # Commit PR message file
          git add .github/temp/PR_MESSAGE.md

          # Only commit if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "Save PR message for release notes [skip ci]"
            git push origin HEAD:$HEAD_REF
            echo "‚úÖ Successfully saved PR message for release notes"
          else
            echo "‚è≠Ô∏è No changes to commit for PR message"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HEAD_REF: ${{ github.head_ref }}
