name: Bump Package

on:
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump Version 🏷️
        id: bump
        run: |
          echo "Bumping version"

          # Read and clean VERSION file (strip leading v if exists)
          VERSION_RAW=$(cat ./VERSION | xargs)
          VERSION_STRIPPED="${VERSION_RAW#v}"

          MAJOR=$(echo "$VERSION_STRIPPED" | cut -d'.' -f1)
          MINOR=$(echo "$VERSION_STRIPPED" | cut -d'.' -f2)
          PATCH=$(echo "$VERSION_STRIPPED" | cut -d'.' -f3)

          echo "Current version: $MAJOR.$MINOR.$PATCH"

          # Get latest release tag (e.g., v0.4.0)
          LAST_VERSION=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          echo "Last version (raw): $LAST_VERSION"

          # Strip 'v' prefix from last version tag
          CLEANED_VERSION="${LAST_VERSION#v}"
          echo "Last version (cleaned): $CLEANED_VERSION"

          # Compare with current version
          if [[ "$CLEANED_VERSION" == "$MAJOR.$MINOR.$PATCH" ]]; then
            PATCH=$((PATCH + 1))
          elif [[ "$CLEANED_VERSION" =~ ^$MAJOR\.$MINOR ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"

          # write new version to package.json
          jq --arg version "$NEW_VERSION" '.version = $version' package.json > tmp.json && mv tmp.json package.json

          # setup git
          git config --local user.name "nalbam-bot"
          git config --local user.email "bot@nalbam.com"
          git add .
          git commit -m "Bump version to $NEW_VERSION"
          git push origin HEAD:$HEAD_REF

          # retitle pull request
          echo "Retitling pull request to 'Release $NEW_VERSION'"
          gh pr edit ${{ github.event.pull_request.number }} --title "Release $NEW_VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HEAD_REF: ${{ github.head_ref }}
